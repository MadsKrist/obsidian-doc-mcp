[project]
name = "obsidian-doc-mcp"
version = "0.1.0"
description = "MCP server for generating Python project documentation in Obsidian-compatible format"
readme = "README.md"
authors = [
    { name = "Mads Kristensen", email = "madskris@proton.me" }
]
requires-python = ">=3.11"
keywords = ["mcp", "documentation", "python", "obsidian", "sphinx", "claude"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
]
dependencies = [
    "sphinx>=7.0.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0.0",
    "tomli>=2.0.0; python_version < '3.11'",
    "watchdog>=3.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "obsidiantools>=0.10.0",
    "mcp>=1.12.4",
    "tomli>=2.2.1",
    "beautifulsoup4>=4.13.4",
    "markdownify>=1.2.0",
    "psutil>=7.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
]

[project.scripts]
obsidian-doc-mcp = "server.mcp_server:main"

[project.urls]
"Homepage" = "https://github.com/madskristensen/obsidian-doc-mcp"
"Bug Tracker" = "https://github.com/madskristensen/obsidian-doc-mcp/issues"
"Documentation" = "https://github.com/madskristensen/obsidian-doc-mcp#readme"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=server --cov=docs_generator --cov=config --cov=utils"
testpaths = ["tests"]
pythonpath = ["."]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["server", "docs_generator", "config", "utils"]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[dependency-groups]
dev = [
    "bandit>=1.8.6",
    "black>=25.1.0",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pyright>=1.1.403",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.8",
    "types-pyyaml>=6.0.12.20250809",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.16",
]
